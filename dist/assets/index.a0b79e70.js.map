{"version":3,"file":"index.a0b79e70.js","sources":["../../vite/modulepreload-polyfill","../../src/modules/zQuery/modules/core.ts","../../src/modules/zQuery/modules/style.ts","../../src/modules/zQuery/modules/sliding.ts","../../src/modules/zQuery/modules/events.ts","../../src/modules/zQuery/z-query.ts","../../node_modules/particle-web-component/dist/utility-classes/Color.js","../../node_modules/particle-web-component/dist/utility-classes/Vector2d.js","../../node_modules/particle-web-component/dist/helpers/helpers.js","../../node_modules/particle-web-component/dist/utility-classes/EventEmitter.js","../../node_modules/particle-web-component/dist/classes/Particle.js","../../node_modules/particle-web-component/dist/classes/ParticleManager.js","../../node_modules/particle-web-component/dist/classes/ParticleCanvas.js","../../node_modules/particle-web-component/dist/app.js","../../src/scripts/main.ts"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","\r\nexport function z(query) { return document.querySelector(query) }\r\nexport function Z(query) { return document.querySelectorAll(query) }\r\nElement.prototype.z = Element.prototype.querySelector;\r\nElement.prototype.Z = Element.prototype.querySelectorAll;\r\n","\r\nexport function style() {\r\n    Element.prototype.computedStyle = function(style) {\r\n        return getComputedStyle(this).getPropertyValue(style);\r\n    }\r\n}","\r\nimport { style } from \"./style.js\";\r\nstyle();\r\n\r\nexport function sliding() {\r\n    HTMLElement.prototype.slideToggle = slideToggle;\r\n}\r\n\r\nfunction slideToggle( duration = 400, timingFunction = 'ease' ) {\r\n    if ( !this.slideState ) this.slideState = 'open';\r\n    if ( this.slideState === 'opening' || this.state === 'closing' ) {\r\n        this.animation.reverse();\r\n        this.slideState === 'opening' ? this.slideState = 'closing' : this.slideState = 'opening';\r\n        return\r\n    }\r\n    this.style.overflow = 'hidden';\r\n    this.style.removeProperty('display');\r\n    const animStyles = { \r\n        height: [this.computedStyle('height'), '0px'], \r\n        paddingBlock: [this.computedStyle('padding-block'), '0px'], \r\n        borderBlockWidth: [this.computedStyle('border-block-width'), '0px'],\r\n        marginBlock: [this.computedStyle('margin-block'), '0px'],\r\n        outlineWidth: [this.computedStyle('outline-width'), '0px'],\r\n        boxShadow: [this.computedStyle('box-shadow'), '0 0 0 0 transparent']\r\n    }\r\n    \r\n    if ( this.slideState === 'closed' ) { \r\n        for (let style in animStyles) {\r\n            animStyles[style].reverse();\r\n        }\r\n    }\r\n    \r\n    this.animation = this.animate(\r\n        animStyles,\r\n        { duration: duration, easing: timingFunction }\r\n    );\r\n        \r\n    this.slideState = this.slideState === 'closed' ? 'opening' : 'closing';\r\n    this.animation.onfinish = () => {\r\n        if ( this.slideState === 'opening' ) {\r\n            this.slideState = 'open';\r\n            this.style.removeProperty('overflow')\r\n        } else {    \r\n            this.slideState = 'closed';\r\n            this.style.display = 'none';\r\n            this.style.removeProperty('overflow');\r\n        }\r\n    }\r\n}\r\n","\r\nexport function events() {\r\n    EventTarget.prototype.on = EventTarget.prototype.addEventListener;\r\n    NodeList.prototype.on = function(eventType, callback, options) {\r\n        this.forEach(node => node.on(eventType, callback, options));\r\n    };\r\n    EventTarget.prototype.trigger = async function(eventName, options) {\r\n        this.dispatchEvent(new CustomEvent(eventName, options));\r\n    };\r\n    NodeList.prototype.trigger = async function(eventName, options) {\r\n        this.forEach(node => node.trigger(eventName, options));\r\n    };\r\n    EventTarget.prototype.off = EventTarget.prototype.removeEventListener;\r\n    NodeList.prototype.off = function(eventType, callback, options) {\r\n        this.forEach(node => node.off(eventType, callback, options));\r\n    };\r\n}","\r\nexport { z, Z } from './modules/core.js';\r\n\r\nimport { sliding } from \"./modules/sliding.js\";\r\nimport { events } from \"./modules/events.js\";\r\nimport { style } from \"./modules/style.js\";\r\n\r\nexport const zQuery = {\r\n    sliding: sliding,\r\n    events: events,\r\n    style: style,\r\n    init(options) { options.forEach(option => zQuery[option]()); }\r\n};\r\n","export class Color {\n    get r() {\n        return this.data[0];\n    }\n    get g() {\n        return this.data[1];\n    }\n    get b() {\n        return this.data[2];\n    }\n    get a() {\n        return this.data[3];\n    }\n    set r(r) {\n        this.data[0] = r;\n    }\n    set g(g) {\n        this.data[1] = g;\n    }\n    set b(b) {\n        this.data[2] = b;\n    }\n    set a(a) {\n        this.data[3] = a;\n    }\n    constructor(r = Color.randHex(), g = Color.randHex(), b = Color.randHex(), a = 1) {\n        this.data = [r, g, b, a];\n    }\n    get rgba() { return `rgba(${this.data.join(', ')})`; }\n    //returns a new color from the average values of an array of other colors,\n    static avgColors(colors) {\n        const avg = [0, 0, 0];\n        colors.forEach(color => {\n            for (let val in avg) {\n                avg[val] += color.data[val] ** 2;\n            }\n        });\n        for (let val in avg) {\n            avg[val] = (avg[val] / colors.length) ** 0.5;\n        }\n        return new Color(avg[0], avg[1], avg[2]);\n    }\n    static randHex() {\n        return Math.round(Math.random() * 255);\n    }\n}\n//# sourceMappingURL=Color.js.map","export class Vector2d {\n    constructor(vec) {\n        this.vec = vec;\n    }\n    get x() {\n        return this.vec[0];\n    }\n    get y() {\n        return this.vec[1];\n    }\n    set x(x) {\n        this.vec[0] = x;\n    }\n    set y(y) {\n        this.vec[1] = y;\n    }\n    get norm() {\n        return (this.x ** 2 + this.y ** 2) ** 0.5;\n    }\n    copy() {\n        return new Vector2d([this.vec[0], this.vec[1]]);\n    }\n    set(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    scale(scalar) {\n        this.x *= scalar;\n        this.y *= scalar;\n    }\n    adjust(vtr) {\n        this.x += vtr.x;\n        this.y += vtr.y;\n    }\n    perp() {\n        return new Vector2d([-this.y, this.x]);\n    }\n    mult(scalar) {\n        return new Vector2d([this.x * scalar, this.y * scalar]);\n    }\n    dot(a) {\n        return this.x * a.x + this.y * a.y;\n    }\n    add(vtr) {\n        return new Vector2d([this.x + vtr.x, this.y + vtr.y]);\n    }\n    minus(vtr) {\n        return this.add(vtr.mult(-1));\n    }\n    getUnit() {\n        return this.mult(1 / this.norm);\n    }\n}\n//# sourceMappingURL=Vector2d.js.map","import { Vector2d } from \"../utility-classes/Vector2d.js\";\nexport const pi = Math.PI;\nexport const randomAngle = () => 2 * pi * Math.random();\nexport const randomAngleVtr = () => {\n    const directionRadeons = randomAngle();\n    return new Vector2d([\n        Math.cos(directionRadeons),\n        Math.sin(directionRadeons)\n    ]);\n};\nexport const ts = (name) => {\n    total[name] = 0;\n};\nlet total = {};\nexport const t = (name) => {\n    let startTime = performance.mark(name).startTime;\n    return () => {\n        const endTime = performance.mark(name).startTime;\n        total[name] += endTime - startTime;\n    };\n};\nexport const tc = (name) => {\n    console.log(name + ': ' + total[name]);\n};\n//# sourceMappingURL=helpers.js.map","export class EventEmitter {\n    constructor() {\n        this.events = {};\n    }\n    on(name, callback) {\n        const callbacks = this.events[name];\n        if (!callbacks)\n            this.events[name] = [callback];\n        else\n            callbacks.push(callback);\n    }\n    trigger(name, event) {\n        const callbacks = this.events[name];\n        if (callbacks)\n            callbacks.forEach(callback => callback(event));\n    }\n    off(name, callback) {\n        const index = this.events[name].indexOf(callback);\n        if (index !== -1) {\n            this.events[name].splice(index, 1);\n        }\n    }\n}\n//# sourceMappingURL=EventEmitter.js.map","import { Color } from '../utility-classes/Color.js';\nimport { pi, randomAngleVtr } from '../helpers/helpers.js';\nimport { EventEmitter } from '../utility-classes/EventEmitter.js';\nexport class Particle extends EventEmitter {\n    constructor(position, speed, radius, id) {\n        super();\n        this.move = () => {\n            this.position.adjust(this.velocity);\n        };\n        this.handleBoundCollision = (e) => {\n            if (e.direction === 'horizontal') {\n                this.vx *= -1;\n                this.x += e.adj;\n            }\n            else if (e.direction === 'vertical') {\n                this.vy *= -1;\n                this.y += e.adj;\n            }\n        };\n        this.handleCollision = (e) => {\n            this.velocity = e.v;\n        };\n        this.id = id;\n        this.position = position;\n        this.velocity = randomAngleVtr().mult(speed);\n        this.radius = radius;\n        this.mass = 4 / 3 * pi * this.radius ** 3;\n        this.color = new Color();\n        this.on('boundsCollide', this.handleBoundCollision);\n        this.on('collision', this.handleCollision);\n    }\n    get x() { return this.position.x; }\n    get y() { return this.position.y; }\n    get vx() { return this.velocity.x; }\n    get vy() { return this.velocity.y; }\n    get speed() { return this.velocity.norm; }\n    get direction() { return Math.acos(this.vx / this.speed); }\n    set x(posX) { this.position.x = posX; }\n    set y(posY) { this.position.y = posY; }\n    set vx(velX) { this.velocity.x = velX; }\n    set vy(velY) { this.velocity.y = velY; }\n}\n//# sourceMappingURL=Particle.js.map","import { Particle } from \"./Particle.js\";\nimport { EventEmitter } from \"../utility-classes/EventEmitter.js\";\nimport { Vector2d } from \"../utility-classes/Vector2d.js\";\nconst defaultParticleOptions = {\n    minSpeed: 0.3,\n    maxSpeed: 0.5,\n    minRadius: 2,\n    maxRadius: 8,\n    initialNumber: 15,\n    vicinity: 50\n};\nexport class ParticleManager extends EventEmitter {\n    constructor(options, bounds) {\n        super();\n        this.particles = new Set();\n        this.options = { ...defaultParticleOptions, ...options };\n        this.setCellSize();\n        this.setBounds(bounds);\n        this.checked = new Set();\n        this.initialiseParticles();\n        this.on('incrementTime', this.incrementTime.bind(this));\n    }\n    incrementTime() {\n        this.particles.forEach((p) => {\n            p.move();\n            this.updateParticleCell(p);\n            this.checkForBoundsCollision(p);\n            this.checkParticleVicinity(p);\n        });\n        this.checked.clear();\n    }\n    ;\n    initialiseParticles() {\n        this.particles.clear();\n        for (let i = this.options.initialNumber; i > 0; i--) {\n            this.add();\n        }\n    }\n    clearParticles() {\n        this.particles.clear();\n        this.grid.forEach(col => col.forEach(cell => cell.clear()));\n    }\n    checkForBoundsCollision(p) {\n        const isLeft = p.x - p.radius <= 0;\n        const isRight = p.x + p.radius >= this.bounds.x;\n        const isOver = p.y - p.radius <= 0;\n        const isUnder = p.y + p.radius >= this.bounds.y;\n        if (isLeft || isRight) {\n            p.trigger('boundsCollide', {\n                direction: 'horizontal',\n                adj: isLeft ? p.radius - p.x : this.bounds.x - p.x - p.radius\n            });\n        }\n        if (isUnder || isOver) {\n            p.trigger('boundsCollide', {\n                direction: 'vertical',\n                adj: isOver ? p.radius - p.y : this.bounds.y - p.y - p.radius\n            });\n        }\n    }\n    checkParticleVicinity(p) {\n        const coords = this.getParticleCoords(p);\n        /*\n        Get the particles from the surrounding 'cells' and handle the interactions between them\n        */\n        for (let x = coords.x - 1; x <= coords.x + 1; x++) {\n            for (let y = coords.y - 1; y <= coords.y + 1; y++) {\n                const cell = this.getCell(new Vector2d([x, y]));\n                if (!cell)\n                    continue;\n                cell.forEach((q) => this.handleNearbyParticle(p, q));\n            }\n        }\n        this.checked.add(p.id);\n    }\n    /**\n    * Determines the action required based on the distance between the two particles\n    */\n    handleNearbyParticle(p, q) {\n        // Skip already checked particles\n        if (this.checked.has(q.id))\n            return;\n        if (p === q)\n            return;\n        //calcing values\n        const perp = p.position.minus(q.position);\n        const distance = perp.norm;\n        const radii = p.radius + q.radius;\n        const inVicinity = (distance <= this.options.vicinity);\n        // Checks if particle is in 'vicinity'\n        // Additional else if required in case 'vicinity' is less than the radius\n        if (inVicinity)\n            this.trigger('inVicinity', { p, q });\n        else if (this.options.vicinity > radii)\n            return;\n        // Checks if the interaction is a collision\n        const isCollision = (distance <= radii);\n        if (!isCollision)\n            return;\n        const perpunit = isCollision && perp.getUnit();\n        const tangunit = isCollision && perp.perp().getUnit();\n        handleOverlap();\n        //u1 is the initial velocity of this particle and u2 the initial velocity of the colliding particle\n        //Projection of initial velocity along the perpendicular and tangent direction of the point of contact\n        const upp = p.velocity.dot(perpunit);\n        const uqp = q.velocity.dot(perpunit);\n        const upt = p.velocity.dot(tangunit);\n        const uqt = q.velocity.dot(tangunit);\n        /*\n        New velocity in the direction of the perpendicular\n        The velocity tangent to the point of collision does not change,\n        but the perpendicular does, hence turning the 2dimensional problem\n        into a 1dimensional, (1 dimensional collision equation)\n        */\n        const totalMass = p.mass + q.mass;\n        const vpp = (q.mass * (uqp - upp) + p.mass * upp + q.mass * uqp) / totalMass;\n        const vqp = (p.mass * (upp - uqp) + p.mass * upp + q.mass * uqp) / totalMass;\n        //Projecting the perp and tang velocities back onto cartesian coordinates\n        const xUnit = new Vector2d([1, 0]);\n        const yUnit = new Vector2d([0, 1]);\n        const pvx = perpunit.mult(vpp).dot(xUnit) + tangunit.mult(upt).dot(xUnit);\n        const pvy = perpunit.mult(vpp).dot(yUnit) + tangunit.mult(upt).dot(yUnit);\n        const qvx = perpunit.mult(vqp).dot(xUnit) + tangunit.mult(uqt).dot(xUnit);\n        const qvy = perpunit.mult(vqp).dot(yUnit) + tangunit.mult(uqt).dot(yUnit);\n        const pv = new Vector2d([pvx, pvy]);\n        const qv = new Vector2d([qvx, qvy]);\n        //Setting the new velocities on the particles\n        p.trigger('collision', { v: pv });\n        q.trigger('collision', { v: qv });\n        // Shifts particles to the point of minimal( not zero! ) contact if they are overlapped\n        function handleOverlap() {\n            const diff = radii - distance;\n            const ratio = p.radius / radii;\n            const padj = perpunit.mult((1 - ratio) * diff);\n            p.position.adjust(padj);\n            const qadj = perpunit.mult(ratio * -diff);\n            q.position.adjust(qadj);\n        }\n    }\n    randomPosition() {\n        const randX = Math.random() * (this.bounds.x - 2 * this.options.maxRadius) + this.options.maxRadius;\n        const randY = Math.random() * (this.bounds.y - 2 * this.options.maxRadius) + this.options.maxRadius;\n        return new Vector2d([randX, randY]);\n    }\n    randomSpeed() {\n        return Math.random() * (this.options.maxSpeed - this.options.minSpeed) + this.options.minSpeed;\n    }\n    add(pos = this.randomPosition()) {\n        const speed = this.randomSpeed();\n        const radius = this.options.minRadius\n            + (this.options.maxRadius - this.options.minRadius)\n                * ((speed - this.options.minSpeed)\n                    / (this.options.maxSpeed - this.options.minSpeed + 0.000001));\n        const p = new Particle(pos, speed, radius, this.particles.size);\n        this.particles.add(p);\n        this.updateParticleCell(p);\n    }\n    updateParticleCell(p) {\n        const newCoords = this.getParticleCoords(p);\n        const hasOldCell = p?.cellCoords !== undefined;\n        const hasChangedCell = !hasOldCell ||\n            newCoords.x !== p.cellCoords.x ||\n            newCoords.y !== p.cellCoords.y;\n        if (!hasChangedCell)\n            return;\n        if (hasOldCell) {\n            const oldCell = this.getCell(p.cellCoords);\n            oldCell.delete(p);\n        }\n        p.cellCoords = newCoords;\n        const newCell = this.getCell(newCoords);\n        newCell.add(p);\n    }\n    getParticleCoords(p) {\n        const vec = [\n            Math.min(Math.max(0, Math.floor(p.x / this.cellSize)), this.grid.length - 1),\n            Math.min(Math.max(0, Math.floor(p.y / this.cellSize)), this.grid[0].length - 1)\n        ];\n        return new Vector2d(vec);\n    }\n    getCell(coords) {\n        if (coords.x >= this.grid.length || coords.y >= this.grid[0].length ||\n            coords.x < 0 || coords.y < 0)\n            return undefined;\n        let cell = this.grid[coords.x][coords.y];\n        if (cell === undefined) {\n            cell = new Set();\n            this.grid[coords.x][coords.y] = cell;\n        }\n        return cell;\n    }\n    /**\n     * Update the cell size. Dependent on the minRadius and vicinity options.\n     * setGrid should also be called after this function\n     */\n    setCellSize() {\n        this.cellSize = Math.ceil(Math.max(2 * this.options.minRadius, this.options.vicinity, 40));\n    }\n    /**\n     * Updates the grid and the particle's cell.\n     * Call if the bounds or cellsize change\n     */\n    setGrid() {\n        // Tracks local positions of particles\n        this.grid = (new Array(Math.ceil(this.bounds.x / this.cellSize))).fill(undefined);\n        this.grid = this.grid.map((_) => new Array(Math.ceil(this.bounds.y / this.cellSize)));\n        this.particles.forEach((p) => {\n            p.cellCoords = undefined;\n            this.updateParticleCell(p);\n        });\n    }\n    /**\n     * Helper that also updates the grid when the bounds are updated.\n     */\n    setBounds(bounds) {\n        this.bounds = bounds;\n        this.setGrid();\n    }\n}\n//# sourceMappingURL=ParticleManager.js.map","import { ParticleManager } from './ParticleManager.js';\nimport { pi } from '../helpers/helpers.js';\nimport { Color } from '../utility-classes/Color.js';\nimport { Vector2d } from '../utility-classes/Vector2d.js';\nconst defaultOptions = {\n    'fill': true,\n    'fill-color': '',\n    'fill-opacity': 0.75,\n    'outline': false,\n    'edges': true,\n    'edge-opacity': 0.8,\n    'mouse-edges': true,\n    'pixel-density': 1,\n    'min-speed': 0.1,\n    'max-speed': 0.8,\n    'min-radius': 1,\n    'max-radius': 5,\n    'initial-number': 30,\n    'vicinity': 75\n};\n//Getting the size of the this and assigning it to an object\nexport class ParticleCanvas extends HTMLElement {\n    connectedCallback() {\n        this.refresh();\n        this.ctx = this.canvas.getContext('2d');\n        this.manager = new ParticleManager(this.managerOptions, new Vector2d([this.canvas.width, this.canvas.height]));\n        this.mousePosition = new Vector2d([0, 0]);\n        const sizeWatcher = new ResizeObserver(() => requestAnimationFrame(this.resize.bind(this)));\n        sizeWatcher.observe(this);\n        this.canvas.addEventListener('mouseenter', this.mouseEnterHandler);\n        this.canvas.addEventListener('mousemove', this.hoverHandler, { passive: true });\n        this.canvas.addEventListener('mouseleave', this.mouseLeaveHandler);\n        this.canvas.addEventListener('click', this.mouseClickHandler);\n        this.manager.on('inVicinity', this.inVicinityHandler);\n        this.renderLoop();\n    }\n    disconnectedCallback() {\n    }\n    constructor() {\n        super();\n        this.renderLoop = () => {\n            this.render();\n            const callback = this.renderLoop;\n            requestAnimationFrame(callback);\n        };\n        this.hoverHandler = (e) => {\n            requestAnimationFrame(() => {\n                this.mousePosition.set(\n                // @ts-ignore\n                e.layerX * this.options.pixelDensity, \n                // @ts-ignore\n                e.layerY * this.options.pixelDensity);\n            });\n        };\n        this.mouseClickHandler = (e) => {\n            this.manager.add(this.mousePosition.copy());\n        };\n        this.mouseEnterHandler = (e) => {\n            this.mousePosition.set(e.layerX * this.options.pixelDensity, e.layerY * this.options.pixelDensity);\n            this.mousePosition[\"active\"] = true;\n        };\n        this.mouseLeaveHandler = () => {\n            this.mousePosition.set(0, 0);\n            this.mousePosition[\"active\"] = false;\n        };\n        this.inVicinityHandler = (e) => {\n            if (this.options.edges)\n                this.renderEdge(e.p, e.q);\n        };\n        this.options = {\n            fill: this.setting('fill') === 'true',\n            fillColor: this.setting('fill-color'),\n            fillOpacity: Number(this.setting('fill-opacity')),\n            outline: this.setting('outline') === 'true',\n            edges: this.setting('edges') === 'true',\n            edgeOpacity: Number(this.setting('edge-opacity')),\n            mouseEdges: this.setting('mouse-edges') === 'true',\n            pixelDensity: Number(this.setting('pixel-density')),\n        };\n        this.managerOptions = {\n            minSpeed: Number(this.setting('min-speed')),\n            maxSpeed: Number(this.setting('max-speed')),\n            minRadius: parseInt(this.setting('min-radius')),\n            maxRadius: parseInt(this.setting('max-radius')),\n            initialNumber: parseInt(this.setting('initial-number')),\n            vicinity: parseInt(this.setting('vicinity')),\n        };\n        const shadow = this.attachShadow({ mode: 'closed' });\n        this.canvas = document.createElement('canvas');\n        this.canvas.style.setProperty('display', 'block');\n        this.canvas.style.setProperty('width', '100%');\n        this.canvas.style.setProperty('height', '100%');\n        shadow.appendChild(this.canvas);\n    }\n    attributeChangedCallback(name, prev, next) {\n        if (next === null)\n            return;\n        if (!this?.manager)\n            return;\n        let val;\n        switch (name) {\n            case 'fill':\n                this.options.fill = next === 'true';\n                break;\n            case 'fill-color':\n                this.options.fillColor = next;\n                break;\n            case 'fill-opacity':\n                this.options.fillOpacity = Number(next);\n                break;\n            case 'outline':\n                this.options.outline = next === 'true';\n                break;\n            case 'edges':\n                this.options.edges = next === 'true';\n                break;\n            case 'edge-opacity':\n                this.options.edgeOpacity = Number(next);\n                break;\n            case 'mouse-edges':\n                this.options.mouseEdges = next === 'true';\n                break;\n            case 'pixel-density':\n                this.options.pixelDensity = Number(next);\n                this.resize();\n                break;\n            case 'min-speed':\n                val = Number(next);\n                this.manager.options.minSpeed = isNaN(val) ? 0 : Math.max(val, 0);\n                break;\n            case 'max-speed':\n                val = Number(next);\n                this.manager.options.maxSpeed = isNaN(val) ? 0 : Math.max(val, 0);\n                break;\n            case 'min-radius':\n                this.manager.options.minRadius = parsePositiveInteger(next);\n                break;\n            case 'max-radius':\n                this.manager.options.minRadius = parsePositiveInteger(next);\n                break;\n            case 'initial-number':\n                this.manager.options.initialNumber = parsePositiveInteger(next);\n                this.manager.clearParticles();\n                this.manager.initialiseParticles();\n                break;\n            case 'vicinity':\n                this.manager.options.vicinity = parsePositiveInteger(next);\n                this.manager.setCellSize();\n                this.resize();\n                break;\n            default:\n                break;\n        }\n    }\n    setting(key) {\n        const attr = this.getAttribute(key);\n        return attr !== null ? attr : defaultOptions[key].toString();\n    }\n    get area() {\n        return this.canvas.width * this.canvas.height;\n    }\n    render() {\n        this.setUpParticleRendering();\n        this.manager.trigger('incrementTime');\n        this.manager.particles.forEach(p => {\n            this.renderParticle(p);\n        });\n        if (this.mousePosition[\"active\"] && this.options.mouseEdges)\n            this.renderMouseEdges();\n    }\n    refresh() {\n        this.canvas.width = this.canvas.scrollWidth * this.options.pixelDensity;\n        this.canvas.height = this.canvas.scrollHeight * this.options.pixelDensity;\n    }\n    resize() {\n        const oldCanvasSize = [this.canvas.width, this.canvas.height, this.area];\n        this.refresh();\n        if (!this?.manager)\n            return;\n        const sizeRatio = this.area / oldCanvasSize[2];\n        this.manager.options.vicinity *= sizeRatio ** 0.5;\n        this.manager.particles.forEach(p => {\n            p.position.set(p.x * (this.canvas.width / oldCanvasSize[0]), p.y * (this.canvas.height / oldCanvasSize[1]));\n        });\n        this.manager.setBounds(new Vector2d([this.canvas.width, this.canvas.height]));\n        this.manager.setGrid();\n    }\n    ;\n    setUpParticleRendering() {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this.ctx.lineCap = 'round';\n        if (this.options.fillColor) {\n            this.ctx.strokeStyle = this.options.fillColor;\n        }\n    }\n    renderParticle(p) {\n        const ctx = this.ctx;\n        ctx.globalAlpha = this.options.fillOpacity;\n        if (this.options.fill || this.options.outline) {\n            ctx.beginPath();\n            ctx.arc(p.x, p.y, p.radius, 0, 2 * pi);\n        }\n        if (this.options.fill) {\n            ctx.fillStyle = this.options.fillColor || p.color.rgba;\n            ctx.fill();\n        }\n        if (this.options.outline) {\n            ctx.strokeStyle = this.options.fillColor || p.color.rgba;\n            ctx.lineWidth = p.radius / 3;\n            ctx.stroke();\n        }\n        ctx.globalAlpha = 1;\n    }\n    //Draws edges between particles within a vicinity\n    renderEdge(p, q) {\n        const ctx = this.ctx;\n        const diff = p.position.minus(q.position);\n        const distance = diff.norm;\n        const radii = p.radius + q.radius;\n        const alpha = this.options.edgeOpacity - ((distance - radii) / ((this.manager.options.vicinity - radii) / this.options.edgeOpacity));\n        if (!this.options.fillColor) {\n            ctx.strokeStyle = Color.avgColors([p.color, q.color]).rgba;\n        }\n        ctx.globalAlpha = alpha;\n        ctx.lineWidth = radii / 5;\n        ctx.beginPath();\n        ctx.moveTo(p.x, p.y);\n        /**\n         * @todo A little hack to get the lines to follow to q particle in the center\n         * The inVicinity is triggered before the q particle is moved, so we're just going to estimate where it's going to be.\n         * There's obviously a bit of error if the q particle actually collides in this frame but 🤷\n         * */\n        ctx.lineTo(q.x + q.vx, q.y + q.vy);\n        ctx.stroke();\n        ctx.globalAlpha = 1;\n    }\n    renderMouseEdges() {\n        this.manager.particles.forEach(p => {\n            const distance = p.position.minus(this.mousePosition).norm;\n            const opacity = this.options.edgeOpacity;\n            if (distance > this.manager.options.vicinity * 1.5)\n                return;\n            const alpha = opacity - (distance / ((this.manager.options.vicinity * 1.5) / opacity));\n            const ctx = this.ctx;\n            ctx.beginPath();\n            ctx.strokeStyle = this.options.fillColor || p.color.rgba;\n            ctx.globalAlpha = alpha;\n            ctx.lineWidth = p.radius * 0.8;\n            ctx.moveTo(p.x, p.y);\n            ctx.lineTo(this.mousePosition.x, this.mousePosition.y);\n            ctx.stroke();\n            ctx.globalAlpha = 1;\n        });\n    }\n}\nParticleCanvas.observedAttributes = [\n    'fill-opacity',\n    'edge-opacity',\n    'mouse-edges',\n    'fill',\n    'fill-color',\n    'outline',\n    'edges',\n    'pixel-density',\n    'min-speed',\n    'max-speed',\n    'min-radius',\n    'max-radius',\n    'initial-number',\n    'vicinity'\n];\nfunction parsePositiveInteger(numberlike) {\n    let val = parseInt(numberlike);\n    return isNaN(val) ? 0 : Math.max(val, 0);\n}\n//# sourceMappingURL=ParticleCanvas.js.map","import { ParticleCanvas } from \"./classes/ParticleCanvas.js\";\nwindow.customElements.define('particle-canvas', ParticleCanvas);\nexport { ParticleCanvas } from \"./classes/ParticleCanvas.js\";\n//# sourceMappingURL=app.js.map","import { z, Z, zQuery } from '../modules/zQuery/z-query';\r\nimport 'particle-web-component';\r\n\r\nzQuery.init(['events']);\r\n\r\nconst canvas = z('particle-canvas');\r\n\r\nfunction inputChangeHandler(event) {\r\n\tconst input = event.currentTarget;\r\n\tupdate(input);\r\n}\r\n\r\nZ('form').on('reset', (e) => {\r\n\tfor (let el of e.currentTarget.elements) {\r\n\t\trequestAnimationFrame(() => update(el));\r\n\t}\r\n});\r\nZ('[type=\"range\"], [type=\"checkbox\"], [type=\"number\"], [type=\"color\"]').forEach(input => {\r\n\tupdate(input);\r\n\tinput.on('input', inputChangeHandler);\r\n});\r\n\r\nfunction update(input: HTMLInputElement) {\r\n\tconst property = input.name;\r\n\r\n\tif (input.type === 'reset') return;\r\n\r\n\tconst value = parseValue(input);\r\n\r\n\tcanvas.setAttribute(property.toString(), value);\r\n};\r\n\r\nfunction parseValue(input) {\r\n\tlet value;\r\n\tswitch (input.type) {\r\n\t\tcase 'checkbox':\r\n\t\t\tvalue = !!input.checked;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tvalue = input.value;\r\n\t}\r\n\treturn value;\r\n};"],"names":["p","relList","link","processPreload","mutations","mutation","node","getFetchOpts","script","fetchOpts","z","query","Z","style","sliding","slideToggle","duration","timingFunction","animStyles","events","eventType","callback","options","eventName","zQuery","option","Color","r","g","b","a","colors","avg","color","val","Vector2d","vec","x","y","scalar","vtr","pi","randomAngle","randomAngleVtr","directionRadeons","EventEmitter","name","callbacks","event","index","Particle","position","speed","radius","id","e","posX","posY","velX","velY","defaultParticleOptions","ParticleManager","bounds","i","col","cell","isLeft","isRight","isOver","isUnder","coords","q","perp","distance","radii","isCollision","perpunit","tangunit","handleOverlap","upp","uqp","upt","uqt","totalMass","vpp","vqp","xUnit","yUnit","pvx","pvy","qvx","qvy","pv","qv","diff","ratio","padj","qadj","randX","randY","pos","newCoords","hasOldCell","_","defaultOptions","ParticleCanvas","shadow","prev","next","parsePositiveInteger","key","attr","oldCanvasSize","sizeRatio","ctx","alpha","opacity","numberlike","canvas","inputChangeHandler","input","el","update","property","value","parseValue"],"mappings":"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"}